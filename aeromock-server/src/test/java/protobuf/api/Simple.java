// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/simple.proto

package protobuf.api;

public final class Simple {
  private Simple() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SimpleRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.api.SimpleRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string text = 1;</code>
     */
    boolean hasText();
    /**
     * <code>required string text = 1;</code>
     */
    java.lang.String getText();
    /**
     * <code>required string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * Protobuf type {@code protobuf.api.SimpleRequest}
   */
  public static final class SimpleRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.api.SimpleRequest)
      SimpleRequestOrBuilder {
    // Use SimpleRequest.newBuilder() to construct.
    private SimpleRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleRequest defaultInstance;
    public static SimpleRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              text_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.api.Simple.internal_static_protobuf_api_SimpleRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.api.Simple.internal_static_protobuf_api_SimpleRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.api.Simple.SimpleRequest.class, protobuf.api.Simple.SimpleRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleRequest> PARSER =
        new com.google.protobuf.AbstractParser<SimpleRequest>() {
      public SimpleRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private java.lang.Object text_;
    /**
     * <code>required string text = 1;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      text_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTextBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTextBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.api.Simple.SimpleRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.api.Simple.SimpleRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.api.Simple.SimpleRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.api.Simple.SimpleRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.api.SimpleRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.api.SimpleRequest)
        protobuf.api.Simple.SimpleRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.api.Simple.SimpleRequest.class, protobuf.api.Simple.SimpleRequest.Builder.class);
      }

      // Construct using protobuf.api.Simple.SimpleRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleRequest_descriptor;
      }

      public protobuf.api.Simple.SimpleRequest getDefaultInstanceForType() {
        return protobuf.api.Simple.SimpleRequest.getDefaultInstance();
      }

      public protobuf.api.Simple.SimpleRequest build() {
        protobuf.api.Simple.SimpleRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.api.Simple.SimpleRequest buildPartial() {
        protobuf.api.Simple.SimpleRequest result = new protobuf.api.Simple.SimpleRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.text_ = text_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.api.Simple.SimpleRequest) {
          return mergeFrom((protobuf.api.Simple.SimpleRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.api.Simple.SimpleRequest other) {
        if (other == protobuf.api.Simple.SimpleRequest.getDefaultInstance()) return this;
        if (other.hasText()) {
          bitField0_ |= 0x00000001;
          text_ = other.text_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasText()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.api.Simple.SimpleRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.api.Simple.SimpleRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object text_ = "";
      /**
       * <code>required string text = 1;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.api.SimpleRequest)
    }

    static {
      defaultInstance = new SimpleRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.api.SimpleRequest)
  }

  public interface SimpleResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.api.SimpleResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 int32Value = 100;</code>
     */
    boolean hasInt32Value();
    /**
     * <code>required int32 int32Value = 100;</code>
     */
    int getInt32Value();

    /**
     * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
     */
    boolean hasInt32OptValue();
    /**
     * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
     */
    int getInt32OptValue();

    /**
     * <code>required int64 int64Value = 110;</code>
     */
    boolean hasInt64Value();
    /**
     * <code>required int64 int64Value = 110;</code>
     */
    long getInt64Value();

    /**
     * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
     */
    boolean hasInt64OptValue();
    /**
     * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
     */
    long getInt64OptValue();

    /**
     * <code>required uint32 uint32Value = 120;</code>
     */
    boolean hasUint32Value();
    /**
     * <code>required uint32 uint32Value = 120;</code>
     */
    int getUint32Value();

    /**
     * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
     */
    boolean hasUint32OptValue();
    /**
     * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
     */
    int getUint32OptValue();

    /**
     * <code>required uint64 uint64Value = 130;</code>
     */
    boolean hasUint64Value();
    /**
     * <code>required uint64 uint64Value = 130;</code>
     */
    long getUint64Value();

    /**
     * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
     */
    boolean hasUint64OptValue();
    /**
     * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
     */
    long getUint64OptValue();

    /**
     * <code>required sint32 sint32Value = 140;</code>
     */
    boolean hasSint32Value();
    /**
     * <code>required sint32 sint32Value = 140;</code>
     */
    int getSint32Value();

    /**
     * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
     */
    boolean hasSint32OptValue();
    /**
     * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
     */
    int getSint32OptValue();

    /**
     * <code>required sint64 sint64Value = 150;</code>
     */
    boolean hasSint64Value();
    /**
     * <code>required sint64 sint64Value = 150;</code>
     */
    long getSint64Value();

    /**
     * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
     */
    boolean hasSint64OptValue();
    /**
     * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
     */
    long getSint64OptValue();

    /**
     * <code>required fixed32 fixed32Value = 160;</code>
     */
    boolean hasFixed32Value();
    /**
     * <code>required fixed32 fixed32Value = 160;</code>
     */
    int getFixed32Value();

    /**
     * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
     */
    boolean hasFixed32OptValue();
    /**
     * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
     */
    int getFixed32OptValue();

    /**
     * <code>required fixed64 fixed64Value = 170;</code>
     */
    boolean hasFixed64Value();
    /**
     * <code>required fixed64 fixed64Value = 170;</code>
     */
    long getFixed64Value();

    /**
     * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
     */
    boolean hasFixed64OptValue();
    /**
     * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
     */
    long getFixed64OptValue();

    /**
     * <code>required sfixed32 sfixed32Value = 180;</code>
     */
    boolean hasSfixed32Value();
    /**
     * <code>required sfixed32 sfixed32Value = 180;</code>
     */
    int getSfixed32Value();

    /**
     * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
     */
    boolean hasSfixed32OptValue();
    /**
     * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
     */
    int getSfixed32OptValue();

    /**
     * <code>required sfixed64 sfixed64Value = 190;</code>
     */
    boolean hasSfixed64Value();
    /**
     * <code>required sfixed64 sfixed64Value = 190;</code>
     */
    long getSfixed64Value();

    /**
     * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
     */
    boolean hasSfixed64OptValue();
    /**
     * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
     */
    long getSfixed64OptValue();

    /**
     * <code>required float floatValue = 200;</code>
     */
    boolean hasFloatValue();
    /**
     * <code>required float floatValue = 200;</code>
     */
    float getFloatValue();

    /**
     * <code>optional float floatOptValue = 201 [default = 20100];</code>
     */
    boolean hasFloatOptValue();
    /**
     * <code>optional float floatOptValue = 201 [default = 20100];</code>
     */
    float getFloatOptValue();

    /**
     * <code>required double doubleValue = 210;</code>
     */
    boolean hasDoubleValue();
    /**
     * <code>required double doubleValue = 210;</code>
     */
    double getDoubleValue();

    /**
     * <code>optional double doubleOptValue = 211 [default = 21100];</code>
     */
    boolean hasDoubleOptValue();
    /**
     * <code>optional double doubleOptValue = 211 [default = 21100];</code>
     */
    double getDoubleOptValue();

    /**
     * <code>required bool boolValue = 220;</code>
     */
    boolean hasBoolValue();
    /**
     * <code>required bool boolValue = 220;</code>
     */
    boolean getBoolValue();

    /**
     * <code>optional bool boolOptValue = 221 [default = true];</code>
     */
    boolean hasBoolOptValue();
    /**
     * <code>optional bool boolOptValue = 221 [default = true];</code>
     */
    boolean getBoolOptValue();

    /**
     * <code>required string stringValue = 230;</code>
     */
    boolean hasStringValue();
    /**
     * <code>required string stringValue = 230;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>required string stringValue = 230;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    boolean hasStringOptValue();
    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    java.lang.String getStringOptValue();
    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    com.google.protobuf.ByteString
        getStringOptValueBytes();

    /**
     * <code>required bytes bytesValue = 240;</code>
     */
    boolean hasBytesValue();
    /**
     * <code>required bytes bytesValue = 240;</code>
     */
    com.google.protobuf.ByteString getBytesValue();

    /**
     * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
     */
    boolean hasBytesOptValue();
    /**
     * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
     */
    com.google.protobuf.ByteString getBytesOptValue();
  }
  /**
   * Protobuf type {@code protobuf.api.SimpleResponse}
   */
  public static final class SimpleResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.api.SimpleResponse)
      SimpleResponseOrBuilder {
    // Use SimpleResponse.newBuilder() to construct.
    private SimpleResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleResponse defaultInstance;
    public static SimpleResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 800: {
              bitField0_ |= 0x00000001;
              int32Value_ = input.readInt32();
              break;
            }
            case 808: {
              bitField0_ |= 0x00000002;
              int32OptValue_ = input.readInt32();
              break;
            }
            case 880: {
              bitField0_ |= 0x00000004;
              int64Value_ = input.readInt64();
              break;
            }
            case 888: {
              bitField0_ |= 0x00000008;
              int64OptValue_ = input.readInt64();
              break;
            }
            case 960: {
              bitField0_ |= 0x00000010;
              uint32Value_ = input.readUInt32();
              break;
            }
            case 968: {
              bitField0_ |= 0x00000020;
              uint32OptValue_ = input.readUInt32();
              break;
            }
            case 1040: {
              bitField0_ |= 0x00000040;
              uint64Value_ = input.readUInt64();
              break;
            }
            case 1048: {
              bitField0_ |= 0x00000080;
              uint64OptValue_ = input.readUInt64();
              break;
            }
            case 1120: {
              bitField0_ |= 0x00000100;
              sint32Value_ = input.readSInt32();
              break;
            }
            case 1128: {
              bitField0_ |= 0x00000200;
              sint32OptValue_ = input.readSInt32();
              break;
            }
            case 1200: {
              bitField0_ |= 0x00000400;
              sint64Value_ = input.readSInt64();
              break;
            }
            case 1208: {
              bitField0_ |= 0x00000800;
              sint64OptValue_ = input.readSInt64();
              break;
            }
            case 1285: {
              bitField0_ |= 0x00001000;
              fixed32Value_ = input.readFixed32();
              break;
            }
            case 1293: {
              bitField0_ |= 0x00002000;
              fixed32OptValue_ = input.readFixed32();
              break;
            }
            case 1361: {
              bitField0_ |= 0x00004000;
              fixed64Value_ = input.readFixed64();
              break;
            }
            case 1369: {
              bitField0_ |= 0x00008000;
              fixed64OptValue_ = input.readFixed64();
              break;
            }
            case 1445: {
              bitField0_ |= 0x00010000;
              sfixed32Value_ = input.readSFixed32();
              break;
            }
            case 1453: {
              bitField0_ |= 0x00020000;
              sfixed32OptValue_ = input.readSFixed32();
              break;
            }
            case 1521: {
              bitField0_ |= 0x00040000;
              sfixed64Value_ = input.readSFixed64();
              break;
            }
            case 1529: {
              bitField0_ |= 0x00080000;
              sfixed64OptValue_ = input.readSFixed64();
              break;
            }
            case 1605: {
              bitField0_ |= 0x00100000;
              floatValue_ = input.readFloat();
              break;
            }
            case 1613: {
              bitField0_ |= 0x00200000;
              floatOptValue_ = input.readFloat();
              break;
            }
            case 1681: {
              bitField0_ |= 0x00400000;
              doubleValue_ = input.readDouble();
              break;
            }
            case 1689: {
              bitField0_ |= 0x00800000;
              doubleOptValue_ = input.readDouble();
              break;
            }
            case 1760: {
              bitField0_ |= 0x01000000;
              boolValue_ = input.readBool();
              break;
            }
            case 1768: {
              bitField0_ |= 0x02000000;
              boolOptValue_ = input.readBool();
              break;
            }
            case 1842: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x04000000;
              stringValue_ = bs;
              break;
            }
            case 1850: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x08000000;
              stringOptValue_ = bs;
              break;
            }
            case 1922: {
              bitField0_ |= 0x10000000;
              bytesValue_ = input.readBytes();
              break;
            }
            case 1930: {
              bitField0_ |= 0x20000000;
              bytesOptValue_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.api.Simple.internal_static_protobuf_api_SimpleResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.api.Simple.internal_static_protobuf_api_SimpleResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.api.Simple.SimpleResponse.class, protobuf.api.Simple.SimpleResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleResponse> PARSER =
        new com.google.protobuf.AbstractParser<SimpleResponse>() {
      public SimpleResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INT32VALUE_FIELD_NUMBER = 100;
    private int int32Value_;
    /**
     * <code>required int32 int32Value = 100;</code>
     */
    public boolean hasInt32Value() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 int32Value = 100;</code>
     */
    public int getInt32Value() {
      return int32Value_;
    }

    public static final int INT32OPTVALUE_FIELD_NUMBER = 101;
    private int int32OptValue_;
    /**
     * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
     */
    public boolean hasInt32OptValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
     */
    public int getInt32OptValue() {
      return int32OptValue_;
    }

    public static final int INT64VALUE_FIELD_NUMBER = 110;
    private long int64Value_;
    /**
     * <code>required int64 int64Value = 110;</code>
     */
    public boolean hasInt64Value() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 int64Value = 110;</code>
     */
    public long getInt64Value() {
      return int64Value_;
    }

    public static final int INT64OPTVALUE_FIELD_NUMBER = 111;
    private long int64OptValue_;
    /**
     * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
     */
    public boolean hasInt64OptValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
     */
    public long getInt64OptValue() {
      return int64OptValue_;
    }

    public static final int UINT32VALUE_FIELD_NUMBER = 120;
    private int uint32Value_;
    /**
     * <code>required uint32 uint32Value = 120;</code>
     */
    public boolean hasUint32Value() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 uint32Value = 120;</code>
     */
    public int getUint32Value() {
      return uint32Value_;
    }

    public static final int UINT32OPTVALUE_FIELD_NUMBER = 121;
    private int uint32OptValue_;
    /**
     * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
     */
    public boolean hasUint32OptValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
     */
    public int getUint32OptValue() {
      return uint32OptValue_;
    }

    public static final int UINT64VALUE_FIELD_NUMBER = 130;
    private long uint64Value_;
    /**
     * <code>required uint64 uint64Value = 130;</code>
     */
    public boolean hasUint64Value() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint64 uint64Value = 130;</code>
     */
    public long getUint64Value() {
      return uint64Value_;
    }

    public static final int UINT64OPTVALUE_FIELD_NUMBER = 131;
    private long uint64OptValue_;
    /**
     * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
     */
    public boolean hasUint64OptValue() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
     */
    public long getUint64OptValue() {
      return uint64OptValue_;
    }

    public static final int SINT32VALUE_FIELD_NUMBER = 140;
    private int sint32Value_;
    /**
     * <code>required sint32 sint32Value = 140;</code>
     */
    public boolean hasSint32Value() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required sint32 sint32Value = 140;</code>
     */
    public int getSint32Value() {
      return sint32Value_;
    }

    public static final int SINT32OPTVALUE_FIELD_NUMBER = 141;
    private int sint32OptValue_;
    /**
     * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
     */
    public boolean hasSint32OptValue() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
     */
    public int getSint32OptValue() {
      return sint32OptValue_;
    }

    public static final int SINT64VALUE_FIELD_NUMBER = 150;
    private long sint64Value_;
    /**
     * <code>required sint64 sint64Value = 150;</code>
     */
    public boolean hasSint64Value() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required sint64 sint64Value = 150;</code>
     */
    public long getSint64Value() {
      return sint64Value_;
    }

    public static final int SINT64OPTVALUE_FIELD_NUMBER = 151;
    private long sint64OptValue_;
    /**
     * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
     */
    public boolean hasSint64OptValue() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
     */
    public long getSint64OptValue() {
      return sint64OptValue_;
    }

    public static final int FIXED32VALUE_FIELD_NUMBER = 160;
    private int fixed32Value_;
    /**
     * <code>required fixed32 fixed32Value = 160;</code>
     */
    public boolean hasFixed32Value() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required fixed32 fixed32Value = 160;</code>
     */
    public int getFixed32Value() {
      return fixed32Value_;
    }

    public static final int FIXED32OPTVALUE_FIELD_NUMBER = 161;
    private int fixed32OptValue_;
    /**
     * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
     */
    public boolean hasFixed32OptValue() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
     */
    public int getFixed32OptValue() {
      return fixed32OptValue_;
    }

    public static final int FIXED64VALUE_FIELD_NUMBER = 170;
    private long fixed64Value_;
    /**
     * <code>required fixed64 fixed64Value = 170;</code>
     */
    public boolean hasFixed64Value() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required fixed64 fixed64Value = 170;</code>
     */
    public long getFixed64Value() {
      return fixed64Value_;
    }

    public static final int FIXED64OPTVALUE_FIELD_NUMBER = 171;
    private long fixed64OptValue_;
    /**
     * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
     */
    public boolean hasFixed64OptValue() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
     */
    public long getFixed64OptValue() {
      return fixed64OptValue_;
    }

    public static final int SFIXED32VALUE_FIELD_NUMBER = 180;
    private int sfixed32Value_;
    /**
     * <code>required sfixed32 sfixed32Value = 180;</code>
     */
    public boolean hasSfixed32Value() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required sfixed32 sfixed32Value = 180;</code>
     */
    public int getSfixed32Value() {
      return sfixed32Value_;
    }

    public static final int SFIXED32OPTVALUE_FIELD_NUMBER = 181;
    private int sfixed32OptValue_;
    /**
     * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
     */
    public boolean hasSfixed32OptValue() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
     */
    public int getSfixed32OptValue() {
      return sfixed32OptValue_;
    }

    public static final int SFIXED64VALUE_FIELD_NUMBER = 190;
    private long sfixed64Value_;
    /**
     * <code>required sfixed64 sfixed64Value = 190;</code>
     */
    public boolean hasSfixed64Value() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required sfixed64 sfixed64Value = 190;</code>
     */
    public long getSfixed64Value() {
      return sfixed64Value_;
    }

    public static final int SFIXED64OPTVALUE_FIELD_NUMBER = 191;
    private long sfixed64OptValue_;
    /**
     * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
     */
    public boolean hasSfixed64OptValue() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
     */
    public long getSfixed64OptValue() {
      return sfixed64OptValue_;
    }

    public static final int FLOATVALUE_FIELD_NUMBER = 200;
    private float floatValue_;
    /**
     * <code>required float floatValue = 200;</code>
     */
    public boolean hasFloatValue() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required float floatValue = 200;</code>
     */
    public float getFloatValue() {
      return floatValue_;
    }

    public static final int FLOATOPTVALUE_FIELD_NUMBER = 201;
    private float floatOptValue_;
    /**
     * <code>optional float floatOptValue = 201 [default = 20100];</code>
     */
    public boolean hasFloatOptValue() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float floatOptValue = 201 [default = 20100];</code>
     */
    public float getFloatOptValue() {
      return floatOptValue_;
    }

    public static final int DOUBLEVALUE_FIELD_NUMBER = 210;
    private double doubleValue_;
    /**
     * <code>required double doubleValue = 210;</code>
     */
    public boolean hasDoubleValue() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required double doubleValue = 210;</code>
     */
    public double getDoubleValue() {
      return doubleValue_;
    }

    public static final int DOUBLEOPTVALUE_FIELD_NUMBER = 211;
    private double doubleOptValue_;
    /**
     * <code>optional double doubleOptValue = 211 [default = 21100];</code>
     */
    public boolean hasDoubleOptValue() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional double doubleOptValue = 211 [default = 21100];</code>
     */
    public double getDoubleOptValue() {
      return doubleOptValue_;
    }

    public static final int BOOLVALUE_FIELD_NUMBER = 220;
    private boolean boolValue_;
    /**
     * <code>required bool boolValue = 220;</code>
     */
    public boolean hasBoolValue() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required bool boolValue = 220;</code>
     */
    public boolean getBoolValue() {
      return boolValue_;
    }

    public static final int BOOLOPTVALUE_FIELD_NUMBER = 221;
    private boolean boolOptValue_;
    /**
     * <code>optional bool boolOptValue = 221 [default = true];</code>
     */
    public boolean hasBoolOptValue() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool boolOptValue = 221 [default = true];</code>
     */
    public boolean getBoolOptValue() {
      return boolOptValue_;
    }

    public static final int STRINGVALUE_FIELD_NUMBER = 230;
    private java.lang.Object stringValue_;
    /**
     * <code>required string stringValue = 230;</code>
     */
    public boolean hasStringValue() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>required string stringValue = 230;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string stringValue = 230;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRINGOPTVALUE_FIELD_NUMBER = 231;
    private java.lang.Object stringOptValue_;
    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    public boolean hasStringOptValue() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    public java.lang.String getStringOptValue() {
      java.lang.Object ref = stringOptValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringOptValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
     */
    public com.google.protobuf.ByteString
        getStringOptValueBytes() {
      java.lang.Object ref = stringOptValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringOptValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTESVALUE_FIELD_NUMBER = 240;
    private com.google.protobuf.ByteString bytesValue_;
    /**
     * <code>required bytes bytesValue = 240;</code>
     */
    public boolean hasBytesValue() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>required bytes bytesValue = 240;</code>
     */
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }

    public static final int BYTESOPTVALUE_FIELD_NUMBER = 241;
    private com.google.protobuf.ByteString bytesOptValue_;
    /**
     * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
     */
    public boolean hasBytesOptValue() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
     */
    public com.google.protobuf.ByteString getBytesOptValue() {
      return bytesOptValue_;
    }

    private void initFields() {
      int32Value_ = 0;
      int32OptValue_ = 10100;
      int64Value_ = 0L;
      int64OptValue_ = 11100L;
      uint32Value_ = 0;
      uint32OptValue_ = 12100;
      uint64Value_ = 0L;
      uint64OptValue_ = 13100L;
      sint32Value_ = 0;
      sint32OptValue_ = 14100;
      sint64Value_ = 0L;
      sint64OptValue_ = 15100L;
      fixed32Value_ = 0;
      fixed32OptValue_ = 16100;
      fixed64Value_ = 0L;
      fixed64OptValue_ = 17100L;
      sfixed32Value_ = 0;
      sfixed32OptValue_ = 18100;
      sfixed64Value_ = 0L;
      sfixed64OptValue_ = 19100L;
      floatValue_ = 0F;
      floatOptValue_ = 20100F;
      doubleValue_ = 0D;
      doubleOptValue_ = 21100D;
      boolValue_ = false;
      boolOptValue_ = true;
      stringValue_ = "";
      stringOptValue_ = "defaultValue";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      bytesOptValue_ = com.google.protobuf.Internal.bytesDefaultValue("defaultValue");
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasInt32Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInt64Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint32Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUint64Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint32Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSint64Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed32Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFixed64Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed32Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSfixed64Value()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFloatValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDoubleValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBoolValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStringValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBytesValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(100, int32Value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(101, int32OptValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(110, int64Value_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(111, int64OptValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(120, uint32Value_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(121, uint32OptValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(130, uint64Value_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(131, uint64OptValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt32(140, sint32Value_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(141, sint32OptValue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt64(150, sint64Value_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSInt64(151, sint64OptValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFixed32(160, fixed32Value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFixed32(161, fixed32OptValue_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFixed64(170, fixed64Value_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFixed64(171, fixed64OptValue_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeSFixed32(180, sfixed32Value_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeSFixed32(181, sfixed32OptValue_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeSFixed64(190, sfixed64Value_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeSFixed64(191, sfixed64OptValue_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(200, floatValue_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(201, floatOptValue_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(210, doubleValue_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeDouble(211, doubleOptValue_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(220, boolValue_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(221, boolOptValue_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBytes(230, getStringValueBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBytes(231, getStringOptValueBytes());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBytes(240, bytesValue_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBytes(241, bytesOptValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(100, int32Value_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(101, int32OptValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(110, int64Value_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(111, int64OptValue_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(120, uint32Value_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(121, uint32OptValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(130, uint64Value_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(131, uint64OptValue_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(140, sint32Value_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(141, sint32OptValue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(150, sint64Value_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(151, sint64OptValue_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(160, fixed32Value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(161, fixed32OptValue_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(170, fixed64Value_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(171, fixed64OptValue_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(180, sfixed32Value_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(181, sfixed32OptValue_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(190, sfixed64Value_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(191, sfixed64OptValue_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(200, floatValue_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(201, floatOptValue_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(210, doubleValue_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(211, doubleOptValue_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(220, boolValue_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(221, boolOptValue_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(230, getStringValueBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(231, getStringOptValueBytes());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(240, bytesValue_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(241, bytesOptValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static protobuf.api.Simple.SimpleResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static protobuf.api.Simple.SimpleResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static protobuf.api.Simple.SimpleResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(protobuf.api.Simple.SimpleResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.api.SimpleResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.api.SimpleResponse)
        protobuf.api.Simple.SimpleResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protobuf.api.Simple.SimpleResponse.class, protobuf.api.Simple.SimpleResponse.Builder.class);
      }

      // Construct using protobuf.api.Simple.SimpleResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        int32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        int32OptValue_ = 10100;
        bitField0_ = (bitField0_ & ~0x00000002);
        int64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64OptValue_ = 11100L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32OptValue_ = 12100;
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        uint64OptValue_ = 13100L;
        bitField0_ = (bitField0_ & ~0x00000080);
        sint32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        sint32OptValue_ = 14100;
        bitField0_ = (bitField0_ & ~0x00000200);
        sint64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        sint64OptValue_ = 15100L;
        bitField0_ = (bitField0_ & ~0x00000800);
        fixed32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fixed32OptValue_ = 16100;
        bitField0_ = (bitField0_ & ~0x00002000);
        fixed64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        fixed64OptValue_ = 17100L;
        bitField0_ = (bitField0_ & ~0x00008000);
        sfixed32Value_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        sfixed32OptValue_ = 18100;
        bitField0_ = (bitField0_ & ~0x00020000);
        sfixed64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        sfixed64OptValue_ = 19100L;
        bitField0_ = (bitField0_ & ~0x00080000);
        floatValue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        floatOptValue_ = 20100F;
        bitField0_ = (bitField0_ & ~0x00200000);
        doubleValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        doubleOptValue_ = 21100D;
        bitField0_ = (bitField0_ & ~0x00800000);
        boolValue_ = false;
        bitField0_ = (bitField0_ & ~0x01000000);
        boolOptValue_ = true;
        bitField0_ = (bitField0_ & ~0x02000000);
        stringValue_ = "";
        bitField0_ = (bitField0_ & ~0x04000000);
        stringOptValue_ = "defaultValue";
        bitField0_ = (bitField0_ & ~0x08000000);
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x10000000);
        bytesOptValue_ = com.google.protobuf.Internal.bytesDefaultValue("defaultValue");
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protobuf.api.Simple.internal_static_protobuf_api_SimpleResponse_descriptor;
      }

      public protobuf.api.Simple.SimpleResponse getDefaultInstanceForType() {
        return protobuf.api.Simple.SimpleResponse.getDefaultInstance();
      }

      public protobuf.api.Simple.SimpleResponse build() {
        protobuf.api.Simple.SimpleResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protobuf.api.Simple.SimpleResponse buildPartial() {
        protobuf.api.Simple.SimpleResponse result = new protobuf.api.Simple.SimpleResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.int32Value_ = int32Value_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.int32OptValue_ = int32OptValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int64Value_ = int64Value_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64OptValue_ = int64OptValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32Value_ = uint32Value_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint32OptValue_ = uint32OptValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.uint64Value_ = uint64Value_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.uint64OptValue_ = uint64OptValue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sint32Value_ = sint32Value_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sint32OptValue_ = sint32OptValue_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sint64Value_ = sint64Value_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sint64OptValue_ = sint64OptValue_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fixed32Value_ = fixed32Value_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.fixed32OptValue_ = fixed32OptValue_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fixed64Value_ = fixed64Value_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fixed64OptValue_ = fixed64OptValue_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.sfixed32Value_ = sfixed32Value_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.sfixed32OptValue_ = sfixed32OptValue_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.sfixed64Value_ = sfixed64Value_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.sfixed64OptValue_ = sfixed64OptValue_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.floatValue_ = floatValue_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.floatOptValue_ = floatOptValue_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.doubleValue_ = doubleValue_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.doubleOptValue_ = doubleOptValue_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.boolValue_ = boolValue_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.boolOptValue_ = boolOptValue_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.stringValue_ = stringValue_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.stringOptValue_ = stringOptValue_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.bytesValue_ = bytesValue_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.bytesOptValue_ = bytesOptValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protobuf.api.Simple.SimpleResponse) {
          return mergeFrom((protobuf.api.Simple.SimpleResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protobuf.api.Simple.SimpleResponse other) {
        if (other == protobuf.api.Simple.SimpleResponse.getDefaultInstance()) return this;
        if (other.hasInt32Value()) {
          setInt32Value(other.getInt32Value());
        }
        if (other.hasInt32OptValue()) {
          setInt32OptValue(other.getInt32OptValue());
        }
        if (other.hasInt64Value()) {
          setInt64Value(other.getInt64Value());
        }
        if (other.hasInt64OptValue()) {
          setInt64OptValue(other.getInt64OptValue());
        }
        if (other.hasUint32Value()) {
          setUint32Value(other.getUint32Value());
        }
        if (other.hasUint32OptValue()) {
          setUint32OptValue(other.getUint32OptValue());
        }
        if (other.hasUint64Value()) {
          setUint64Value(other.getUint64Value());
        }
        if (other.hasUint64OptValue()) {
          setUint64OptValue(other.getUint64OptValue());
        }
        if (other.hasSint32Value()) {
          setSint32Value(other.getSint32Value());
        }
        if (other.hasSint32OptValue()) {
          setSint32OptValue(other.getSint32OptValue());
        }
        if (other.hasSint64Value()) {
          setSint64Value(other.getSint64Value());
        }
        if (other.hasSint64OptValue()) {
          setSint64OptValue(other.getSint64OptValue());
        }
        if (other.hasFixed32Value()) {
          setFixed32Value(other.getFixed32Value());
        }
        if (other.hasFixed32OptValue()) {
          setFixed32OptValue(other.getFixed32OptValue());
        }
        if (other.hasFixed64Value()) {
          setFixed64Value(other.getFixed64Value());
        }
        if (other.hasFixed64OptValue()) {
          setFixed64OptValue(other.getFixed64OptValue());
        }
        if (other.hasSfixed32Value()) {
          setSfixed32Value(other.getSfixed32Value());
        }
        if (other.hasSfixed32OptValue()) {
          setSfixed32OptValue(other.getSfixed32OptValue());
        }
        if (other.hasSfixed64Value()) {
          setSfixed64Value(other.getSfixed64Value());
        }
        if (other.hasSfixed64OptValue()) {
          setSfixed64OptValue(other.getSfixed64OptValue());
        }
        if (other.hasFloatValue()) {
          setFloatValue(other.getFloatValue());
        }
        if (other.hasFloatOptValue()) {
          setFloatOptValue(other.getFloatOptValue());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.hasDoubleOptValue()) {
          setDoubleOptValue(other.getDoubleOptValue());
        }
        if (other.hasBoolValue()) {
          setBoolValue(other.getBoolValue());
        }
        if (other.hasBoolOptValue()) {
          setBoolOptValue(other.getBoolOptValue());
        }
        if (other.hasStringValue()) {
          bitField0_ |= 0x04000000;
          stringValue_ = other.stringValue_;
          onChanged();
        }
        if (other.hasStringOptValue()) {
          bitField0_ |= 0x08000000;
          stringOptValue_ = other.stringOptValue_;
          onChanged();
        }
        if (other.hasBytesValue()) {
          setBytesValue(other.getBytesValue());
        }
        if (other.hasBytesOptValue()) {
          setBytesOptValue(other.getBytesOptValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInt32Value()) {
          
          return false;
        }
        if (!hasInt64Value()) {
          
          return false;
        }
        if (!hasUint32Value()) {
          
          return false;
        }
        if (!hasUint64Value()) {
          
          return false;
        }
        if (!hasSint32Value()) {
          
          return false;
        }
        if (!hasSint64Value()) {
          
          return false;
        }
        if (!hasFixed32Value()) {
          
          return false;
        }
        if (!hasFixed64Value()) {
          
          return false;
        }
        if (!hasSfixed32Value()) {
          
          return false;
        }
        if (!hasSfixed64Value()) {
          
          return false;
        }
        if (!hasFloatValue()) {
          
          return false;
        }
        if (!hasDoubleValue()) {
          
          return false;
        }
        if (!hasBoolValue()) {
          
          return false;
        }
        if (!hasStringValue()) {
          
          return false;
        }
        if (!hasBytesValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protobuf.api.Simple.SimpleResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protobuf.api.Simple.SimpleResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int int32Value_ ;
      /**
       * <code>required int32 int32Value = 100;</code>
       */
      public boolean hasInt32Value() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 int32Value = 100;</code>
       */
      public int getInt32Value() {
        return int32Value_;
      }
      /**
       * <code>required int32 int32Value = 100;</code>
       */
      public Builder setInt32Value(int value) {
        bitField0_ |= 0x00000001;
        int32Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 int32Value = 100;</code>
       */
      public Builder clearInt32Value() {
        bitField0_ = (bitField0_ & ~0x00000001);
        int32Value_ = 0;
        onChanged();
        return this;
      }

      private int int32OptValue_ = 10100;
      /**
       * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
       */
      public boolean hasInt32OptValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
       */
      public int getInt32OptValue() {
        return int32OptValue_;
      }
      /**
       * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
       */
      public Builder setInt32OptValue(int value) {
        bitField0_ |= 0x00000002;
        int32OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 int32OptValue = 101 [default = 10100];</code>
       */
      public Builder clearInt32OptValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        int32OptValue_ = 10100;
        onChanged();
        return this;
      }

      private long int64Value_ ;
      /**
       * <code>required int64 int64Value = 110;</code>
       */
      public boolean hasInt64Value() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 int64Value = 110;</code>
       */
      public long getInt64Value() {
        return int64Value_;
      }
      /**
       * <code>required int64 int64Value = 110;</code>
       */
      public Builder setInt64Value(long value) {
        bitField0_ |= 0x00000004;
        int64Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 int64Value = 110;</code>
       */
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int64Value_ = 0L;
        onChanged();
        return this;
      }

      private long int64OptValue_ = 11100L;
      /**
       * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
       */
      public boolean hasInt64OptValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
       */
      public long getInt64OptValue() {
        return int64OptValue_;
      }
      /**
       * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
       */
      public Builder setInt64OptValue(long value) {
        bitField0_ |= 0x00000008;
        int64OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 int64OptValue = 111 [default = 11100];</code>
       */
      public Builder clearInt64OptValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64OptValue_ = 11100L;
        onChanged();
        return this;
      }

      private int uint32Value_ ;
      /**
       * <code>required uint32 uint32Value = 120;</code>
       */
      public boolean hasUint32Value() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 uint32Value = 120;</code>
       */
      public int getUint32Value() {
        return uint32Value_;
      }
      /**
       * <code>required uint32 uint32Value = 120;</code>
       */
      public Builder setUint32Value(int value) {
        bitField0_ |= 0x00000010;
        uint32Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 uint32Value = 120;</code>
       */
      public Builder clearUint32Value() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32Value_ = 0;
        onChanged();
        return this;
      }

      private int uint32OptValue_ = 12100;
      /**
       * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
       */
      public boolean hasUint32OptValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
       */
      public int getUint32OptValue() {
        return uint32OptValue_;
      }
      /**
       * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
       */
      public Builder setUint32OptValue(int value) {
        bitField0_ |= 0x00000020;
        uint32OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 uint32OptValue = 121 [default = 12100];</code>
       */
      public Builder clearUint32OptValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint32OptValue_ = 12100;
        onChanged();
        return this;
      }

      private long uint64Value_ ;
      /**
       * <code>required uint64 uint64Value = 130;</code>
       */
      public boolean hasUint64Value() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint64 uint64Value = 130;</code>
       */
      public long getUint64Value() {
        return uint64Value_;
      }
      /**
       * <code>required uint64 uint64Value = 130;</code>
       */
      public Builder setUint64Value(long value) {
        bitField0_ |= 0x00000040;
        uint64Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 uint64Value = 130;</code>
       */
      public Builder clearUint64Value() {
        bitField0_ = (bitField0_ & ~0x00000040);
        uint64Value_ = 0L;
        onChanged();
        return this;
      }

      private long uint64OptValue_ = 13100L;
      /**
       * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
       */
      public boolean hasUint64OptValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
       */
      public long getUint64OptValue() {
        return uint64OptValue_;
      }
      /**
       * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
       */
      public Builder setUint64OptValue(long value) {
        bitField0_ |= 0x00000080;
        uint64OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 uint64OptValue = 131 [default = 13100];</code>
       */
      public Builder clearUint64OptValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        uint64OptValue_ = 13100L;
        onChanged();
        return this;
      }

      private int sint32Value_ ;
      /**
       * <code>required sint32 sint32Value = 140;</code>
       */
      public boolean hasSint32Value() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required sint32 sint32Value = 140;</code>
       */
      public int getSint32Value() {
        return sint32Value_;
      }
      /**
       * <code>required sint32 sint32Value = 140;</code>
       */
      public Builder setSint32Value(int value) {
        bitField0_ |= 0x00000100;
        sint32Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sint32Value = 140;</code>
       */
      public Builder clearSint32Value() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sint32Value_ = 0;
        onChanged();
        return this;
      }

      private int sint32OptValue_ = 14100;
      /**
       * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
       */
      public boolean hasSint32OptValue() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
       */
      public int getSint32OptValue() {
        return sint32OptValue_;
      }
      /**
       * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
       */
      public Builder setSint32OptValue(int value) {
        bitField0_ |= 0x00000200;
        sint32OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 sint32OptValue = 141 [default = 14100];</code>
       */
      public Builder clearSint32OptValue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sint32OptValue_ = 14100;
        onChanged();
        return this;
      }

      private long sint64Value_ ;
      /**
       * <code>required sint64 sint64Value = 150;</code>
       */
      public boolean hasSint64Value() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required sint64 sint64Value = 150;</code>
       */
      public long getSint64Value() {
        return sint64Value_;
      }
      /**
       * <code>required sint64 sint64Value = 150;</code>
       */
      public Builder setSint64Value(long value) {
        bitField0_ |= 0x00000400;
        sint64Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint64 sint64Value = 150;</code>
       */
      public Builder clearSint64Value() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sint64Value_ = 0L;
        onChanged();
        return this;
      }

      private long sint64OptValue_ = 15100L;
      /**
       * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
       */
      public boolean hasSint64OptValue() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
       */
      public long getSint64OptValue() {
        return sint64OptValue_;
      }
      /**
       * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
       */
      public Builder setSint64OptValue(long value) {
        bitField0_ |= 0x00000800;
        sint64OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 sint64OptValue = 151 [default = 15100];</code>
       */
      public Builder clearSint64OptValue() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sint64OptValue_ = 15100L;
        onChanged();
        return this;
      }

      private int fixed32Value_ ;
      /**
       * <code>required fixed32 fixed32Value = 160;</code>
       */
      public boolean hasFixed32Value() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required fixed32 fixed32Value = 160;</code>
       */
      public int getFixed32Value() {
        return fixed32Value_;
      }
      /**
       * <code>required fixed32 fixed32Value = 160;</code>
       */
      public Builder setFixed32Value(int value) {
        bitField0_ |= 0x00001000;
        fixed32Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 fixed32Value = 160;</code>
       */
      public Builder clearFixed32Value() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fixed32Value_ = 0;
        onChanged();
        return this;
      }

      private int fixed32OptValue_ = 16100;
      /**
       * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
       */
      public boolean hasFixed32OptValue() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
       */
      public int getFixed32OptValue() {
        return fixed32OptValue_;
      }
      /**
       * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
       */
      public Builder setFixed32OptValue(int value) {
        bitField0_ |= 0x00002000;
        fixed32OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fixed32OptValue = 161 [default = 16100];</code>
       */
      public Builder clearFixed32OptValue() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fixed32OptValue_ = 16100;
        onChanged();
        return this;
      }

      private long fixed64Value_ ;
      /**
       * <code>required fixed64 fixed64Value = 170;</code>
       */
      public boolean hasFixed64Value() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required fixed64 fixed64Value = 170;</code>
       */
      public long getFixed64Value() {
        return fixed64Value_;
      }
      /**
       * <code>required fixed64 fixed64Value = 170;</code>
       */
      public Builder setFixed64Value(long value) {
        bitField0_ |= 0x00004000;
        fixed64Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 fixed64Value = 170;</code>
       */
      public Builder clearFixed64Value() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fixed64Value_ = 0L;
        onChanged();
        return this;
      }

      private long fixed64OptValue_ = 17100L;
      /**
       * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
       */
      public boolean hasFixed64OptValue() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
       */
      public long getFixed64OptValue() {
        return fixed64OptValue_;
      }
      /**
       * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
       */
      public Builder setFixed64OptValue(long value) {
        bitField0_ |= 0x00008000;
        fixed64OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 fixed64OptValue = 171 [default = 17100];</code>
       */
      public Builder clearFixed64OptValue() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fixed64OptValue_ = 17100L;
        onChanged();
        return this;
      }

      private int sfixed32Value_ ;
      /**
       * <code>required sfixed32 sfixed32Value = 180;</code>
       */
      public boolean hasSfixed32Value() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required sfixed32 sfixed32Value = 180;</code>
       */
      public int getSfixed32Value() {
        return sfixed32Value_;
      }
      /**
       * <code>required sfixed32 sfixed32Value = 180;</code>
       */
      public Builder setSfixed32Value(int value) {
        bitField0_ |= 0x00010000;
        sfixed32Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 sfixed32Value = 180;</code>
       */
      public Builder clearSfixed32Value() {
        bitField0_ = (bitField0_ & ~0x00010000);
        sfixed32Value_ = 0;
        onChanged();
        return this;
      }

      private int sfixed32OptValue_ = 18100;
      /**
       * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
       */
      public boolean hasSfixed32OptValue() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
       */
      public int getSfixed32OptValue() {
        return sfixed32OptValue_;
      }
      /**
       * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
       */
      public Builder setSfixed32OptValue(int value) {
        bitField0_ |= 0x00020000;
        sfixed32OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 sfixed32OptValue = 181 [default = 18100];</code>
       */
      public Builder clearSfixed32OptValue() {
        bitField0_ = (bitField0_ & ~0x00020000);
        sfixed32OptValue_ = 18100;
        onChanged();
        return this;
      }

      private long sfixed64Value_ ;
      /**
       * <code>required sfixed64 sfixed64Value = 190;</code>
       */
      public boolean hasSfixed64Value() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required sfixed64 sfixed64Value = 190;</code>
       */
      public long getSfixed64Value() {
        return sfixed64Value_;
      }
      /**
       * <code>required sfixed64 sfixed64Value = 190;</code>
       */
      public Builder setSfixed64Value(long value) {
        bitField0_ |= 0x00040000;
        sfixed64Value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed64 sfixed64Value = 190;</code>
       */
      public Builder clearSfixed64Value() {
        bitField0_ = (bitField0_ & ~0x00040000);
        sfixed64Value_ = 0L;
        onChanged();
        return this;
      }

      private long sfixed64OptValue_ = 19100L;
      /**
       * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
       */
      public boolean hasSfixed64OptValue() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
       */
      public long getSfixed64OptValue() {
        return sfixed64OptValue_;
      }
      /**
       * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
       */
      public Builder setSfixed64OptValue(long value) {
        bitField0_ |= 0x00080000;
        sfixed64OptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 sfixed64OptValue = 191 [default = 19100];</code>
       */
      public Builder clearSfixed64OptValue() {
        bitField0_ = (bitField0_ & ~0x00080000);
        sfixed64OptValue_ = 19100L;
        onChanged();
        return this;
      }

      private float floatValue_ ;
      /**
       * <code>required float floatValue = 200;</code>
       */
      public boolean hasFloatValue() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required float floatValue = 200;</code>
       */
      public float getFloatValue() {
        return floatValue_;
      }
      /**
       * <code>required float floatValue = 200;</code>
       */
      public Builder setFloatValue(float value) {
        bitField0_ |= 0x00100000;
        floatValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float floatValue = 200;</code>
       */
      public Builder clearFloatValue() {
        bitField0_ = (bitField0_ & ~0x00100000);
        floatValue_ = 0F;
        onChanged();
        return this;
      }

      private float floatOptValue_ = 20100F;
      /**
       * <code>optional float floatOptValue = 201 [default = 20100];</code>
       */
      public boolean hasFloatOptValue() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float floatOptValue = 201 [default = 20100];</code>
       */
      public float getFloatOptValue() {
        return floatOptValue_;
      }
      /**
       * <code>optional float floatOptValue = 201 [default = 20100];</code>
       */
      public Builder setFloatOptValue(float value) {
        bitField0_ |= 0x00200000;
        floatOptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float floatOptValue = 201 [default = 20100];</code>
       */
      public Builder clearFloatOptValue() {
        bitField0_ = (bitField0_ & ~0x00200000);
        floatOptValue_ = 20100F;
        onChanged();
        return this;
      }

      private double doubleValue_ ;
      /**
       * <code>required double doubleValue = 210;</code>
       */
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required double doubleValue = 210;</code>
       */
      public double getDoubleValue() {
        return doubleValue_;
      }
      /**
       * <code>required double doubleValue = 210;</code>
       */
      public Builder setDoubleValue(double value) {
        bitField0_ |= 0x00400000;
        doubleValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double doubleValue = 210;</code>
       */
      public Builder clearDoubleValue() {
        bitField0_ = (bitField0_ & ~0x00400000);
        doubleValue_ = 0D;
        onChanged();
        return this;
      }

      private double doubleOptValue_ = 21100D;
      /**
       * <code>optional double doubleOptValue = 211 [default = 21100];</code>
       */
      public boolean hasDoubleOptValue() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional double doubleOptValue = 211 [default = 21100];</code>
       */
      public double getDoubleOptValue() {
        return doubleOptValue_;
      }
      /**
       * <code>optional double doubleOptValue = 211 [default = 21100];</code>
       */
      public Builder setDoubleOptValue(double value) {
        bitField0_ |= 0x00800000;
        doubleOptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double doubleOptValue = 211 [default = 21100];</code>
       */
      public Builder clearDoubleOptValue() {
        bitField0_ = (bitField0_ & ~0x00800000);
        doubleOptValue_ = 21100D;
        onChanged();
        return this;
      }

      private boolean boolValue_ ;
      /**
       * <code>required bool boolValue = 220;</code>
       */
      public boolean hasBoolValue() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required bool boolValue = 220;</code>
       */
      public boolean getBoolValue() {
        return boolValue_;
      }
      /**
       * <code>required bool boolValue = 220;</code>
       */
      public Builder setBoolValue(boolean value) {
        bitField0_ |= 0x01000000;
        boolValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool boolValue = 220;</code>
       */
      public Builder clearBoolValue() {
        bitField0_ = (bitField0_ & ~0x01000000);
        boolValue_ = false;
        onChanged();
        return this;
      }

      private boolean boolOptValue_ = true;
      /**
       * <code>optional bool boolOptValue = 221 [default = true];</code>
       */
      public boolean hasBoolOptValue() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool boolOptValue = 221 [default = true];</code>
       */
      public boolean getBoolOptValue() {
        return boolOptValue_;
      }
      /**
       * <code>optional bool boolOptValue = 221 [default = true];</code>
       */
      public Builder setBoolOptValue(boolean value) {
        bitField0_ |= 0x02000000;
        boolOptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool boolOptValue = 221 [default = true];</code>
       */
      public Builder clearBoolOptValue() {
        bitField0_ = (bitField0_ & ~0x02000000);
        boolOptValue_ = true;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>required string stringValue = 230;</code>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>required string stringValue = 230;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string stringValue = 230;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string stringValue = 230;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x04000000;
        stringValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string stringValue = 230;</code>
       */
      public Builder clearStringValue() {
        bitField0_ = (bitField0_ & ~0x04000000);
        stringValue_ = getDefaultInstance().getStringValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string stringValue = 230;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x04000000;
        stringValue_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stringOptValue_ = "defaultValue";
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public boolean hasStringOptValue() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public java.lang.String getStringOptValue() {
        java.lang.Object ref = stringOptValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringOptValue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public com.google.protobuf.ByteString
          getStringOptValueBytes() {
        java.lang.Object ref = stringOptValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringOptValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public Builder setStringOptValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        stringOptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public Builder clearStringOptValue() {
        bitField0_ = (bitField0_ & ~0x08000000);
        stringOptValue_ = getDefaultInstance().getStringOptValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stringOptValue = 231 [default = "defaultValue"];</code>
       */
      public Builder setStringOptValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        stringOptValue_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes bytesValue = 240;</code>
       */
      public boolean hasBytesValue() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>required bytes bytesValue = 240;</code>
       */
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      /**
       * <code>required bytes bytesValue = 240;</code>
       */
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        bytesValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes bytesValue = 240;</code>
       */
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x10000000);
        bytesValue_ = getDefaultInstance().getBytesValue();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesOptValue_ = com.google.protobuf.Internal.bytesDefaultValue("defaultValue");
      /**
       * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
       */
      public boolean hasBytesOptValue() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
       */
      public com.google.protobuf.ByteString getBytesOptValue() {
        return bytesOptValue_;
      }
      /**
       * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
       */
      public Builder setBytesOptValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x20000000;
        bytesOptValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytesOptValue = 241 [default = "defaultValue"];</code>
       */
      public Builder clearBytesOptValue() {
        bitField0_ = (bitField0_ & ~0x20000000);
        bytesOptValue_ = getDefaultInstance().getBytesOptValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.api.SimpleResponse)
    }

    static {
      defaultInstance = new SimpleResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.api.SimpleResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_api_SimpleRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_api_SimpleRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_api_SimpleResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_api_SimpleResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020api/simple.proto\022\014protobuf.api\"\035\n\rSimp" +
      "leRequest\022\014\n\004text\030\001 \002(\t\"\301\006\n\016SimpleRespon" +
      "se\022\022\n\nint32Value\030d \002(\005\022\034\n\rint32OptValue\030" +
      "e \001(\005:\00510100\022\022\n\nint64Value\030n \002(\003\022\034\n\rint6" +
      "4OptValue\030o \001(\003:\00511100\022\023\n\013uint32Value\030x " +
      "\002(\r\022\035\n\016uint32OptValue\030y \001(\r:\00512100\022\024\n\013ui" +
      "nt64Value\030\202\001 \002(\004\022\036\n\016uint64OptValue\030\203\001 \001(" +
      "\004:\00513100\022\024\n\013sint32Value\030\214\001 \002(\021\022\036\n\016sint32" +
      "OptValue\030\215\001 \001(\021:\00514100\022\024\n\013sint64Value\030\226\001" +
      " \002(\022\022\036\n\016sint64OptValue\030\227\001 \001(\022:\00515100\022\025\n\014",
      "fixed32Value\030\240\001 \002(\007\022\037\n\017fixed32OptValue\030\241" +
      "\001 \001(\007:\00516100\022\025\n\014fixed64Value\030\252\001 \002(\006\022\037\n\017f" +
      "ixed64OptValue\030\253\001 \001(\006:\00517100\022\026\n\rsfixed32" +
      "Value\030\264\001 \002(\017\022 \n\020sfixed32OptValue\030\265\001 \001(\017:" +
      "\00518100\022\026\n\rsfixed64Value\030\276\001 \002(\020\022 \n\020sfixed" +
      "64OptValue\030\277\001 \001(\020:\00519100\022\023\n\nfloatValue\030\310" +
      "\001 \002(\002\022\035\n\rfloatOptValue\030\311\001 \001(\002:\00520100\022\024\n\013" +
      "doubleValue\030\322\001 \002(\001\022\036\n\016doubleOptValue\030\323\001 " +
      "\001(\001:\00521100\022\022\n\tboolValue\030\334\001 \002(\010\022\033\n\014boolOp" +
      "tValue\030\335\001 \001(\010:\004true\022\024\n\013stringValue\030\346\001 \002(",
      "\t\022%\n\016stringOptValue\030\347\001 \001(\t:\014defaultValue" +
      "\022\023\n\nbytesValue\030\360\001 \002(\014\022$\n\rbytesOptValue\030\361" +
      "\001 \001(\014:\014defaultValue"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protobuf_api_SimpleRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_api_SimpleRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_api_SimpleRequest_descriptor,
        new java.lang.String[] { "Text", });
    internal_static_protobuf_api_SimpleResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_api_SimpleResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_api_SimpleResponse_descriptor,
        new java.lang.String[] { "Int32Value", "Int32OptValue", "Int64Value", "Int64OptValue", "Uint32Value", "Uint32OptValue", "Uint64Value", "Uint64OptValue", "Sint32Value", "Sint32OptValue", "Sint64Value", "Sint64OptValue", "Fixed32Value", "Fixed32OptValue", "Fixed64Value", "Fixed64OptValue", "Sfixed32Value", "Sfixed32OptValue", "Sfixed64Value", "Sfixed64OptValue", "FloatValue", "FloatOptValue", "DoubleValue", "DoubleOptValue", "BoolValue", "BoolOptValue", "StringValue", "StringOptValue", "BytesValue", "BytesOptValue", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
